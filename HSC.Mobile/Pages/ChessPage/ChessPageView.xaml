<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:HSC.Mobile"
             x:Class="HSC.Mobile.ChessPageView"
             x:DataType="chessPage:ChessPageViewModel"
             xmlns:localize="clr-namespace:HSC.Mobile.MarkupExtensions"
             xmlns:chessPage="clr-namespace:HSC.Mobile.Pages.ChessPage"
             xmlns:converters="clr-namespace:HSC.Mobile.Converters"
             BackgroundColor="{DynamicResource BackgroundColor}"
             xmlns:helpers="clr-namespace:HSC.Mobile.Helpers">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:TimeActiveToBackgroundcolorConverter x:Key="timetoBgConverter" />
            <converters:DrawOfferToIconColorConverter x:Key="drawOffertoColorconverter" />
            <converters:InvertBoolConverter x:Key="invertBoolconverter" />
            <converters:AllTrueMultiConverter x:Key="allTrueConverter" />
        </ResourceDictionary>
        <Style TargetType="Label">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource BackgroundColor}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
                                        Value="{DynamicResource BackgroundColor2}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentPage.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="500"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <VerticalStackLayout Grid.Row="0" Padding="5, 5, 5, 0" VerticalOptions="Fill">
            <HorizontalStackLayout HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding IsBettingActive, Converter={StaticResource invertBoolconverter}}" Padding="0, 20, 0, 0">
                <Label Text="{localize:Localize Key=Betting.CurrentPot}" FontSize="24"></Label>
                <Label Text="{Binding CurrentBet, StringFormat=' {0:F2}$'}" FontSize="24"></Label>
            </HorizontalStackLayout>
            <VerticalStackLayout IsVisible="{Binding IsBettingActive}">
                <HorizontalStackLayout HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding MyTurn, Converter={StaticResource invertBoolconverter}}">
                    <Label FontSize="24" Text="{localize:Localize Key=Betting.WaitingForOpponent}" Padding="0, 30, 0, 0"></Label>
                </HorizontalStackLayout>
                <VerticalStackLayout Spacing="10">
                    <VerticalStackLayout.IsVisible>
                        <MultiBinding Converter="{StaticResource allTrueConverter}">
                            <Binding Path="MyTurn"/>
                            <Binding Path="IsBettingOverReason" Converter="{StaticResource invertBoolconverter}"/>
                        </MultiBinding>
                    </VerticalStackLayout.IsVisible>
                    <HorizontalStackLayout HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding MyTurn}">
                        <Label Text="{Binding BettingText}"></Label>
                    </HorizontalStackLayout>
                    <Slider IsVisible="{Binding MyTurn}" Maximum="{Binding FullData.MaximumBet}" Minimum="{Binding CurrentBet}" Value="{Binding CurrentBetSlider}"></Slider>
                    <HorizontalStackLayout Spacing="20" HorizontalOptions="Center" VerticalOptions="Center" IsVisible="{Binding MyTurn}">
                        <Button Command="{Binding CheckCommand}" Text="{localize:Localize Key=Betting.Check}" IsVisible="{Binding HasOpponentRaised, Converter={StaticResource invertBoolconverter}}"></Button>
                        <Button Command="{Binding CallCommand}" Text="{localize:Localize Key=Betting.Call}" IsVisible="{Binding HasOpponentRaised}"></Button>
                        <Button Command="{Binding RaiseCommand}" Text="{localize:Localize Key=Betting.Raise}"></Button>
                        <Label Text="{Binding CurrentBetSlider, StringFormat='{0:F2}'}" VerticalOptions="Center"></Label>
                        <Button Command="{Binding FoldCommand}" Text="{localize:Localize Key=Betting.Fold}"></Button>
                    </HorizontalStackLayout>
                </VerticalStackLayout>
            </VerticalStackLayout>
            <Label Text="{Binding BettingText}">
                <Label.IsVisible>
                    <MultiBinding Converter="{StaticResource allTrueConverter}">
                        <Binding Path="MyTurn" />
                        <Binding Path="IsBettingOverReason"/>
                    </MultiBinding>
                </Label.IsVisible>
            </Label>
        </VerticalStackLayout>
        <VerticalStackLayout Grid.Row="1">
            <FlexLayout Direction="Row" JustifyContent="SpaceBetween" AlignItems="End" HeightRequest="50">
                <Label Text="{Binding OpponentUserName}" Padding="10, 0, 0, 0"></Label>
                <VerticalStackLayout HeightRequest="50" WidthRequest="120" BackgroundColor="{Binding OpponentClockIsActive, Converter={StaticResource timetoBgConverter}}">
                    <Label Text="{Binding OpponentTime, StringFormat='{0:mm\\:ss}'}" FontSize="40" HorizontalOptions="End" Padding="5, 0"/>
                </VerticalStackLayout>
            </FlexLayout>
            <BlazorWebView HostPage="wwwroot/index.html" HeightRequest="390">
                <BlazorWebView.RootComponents>
                    <RootComponent Selector="#app" ComponentType="{x:Type local:Main}" />
                </BlazorWebView.RootComponents>
            </BlazorWebView>
            <FlexLayout Direction="Row" JustifyContent="SpaceBetween" AlignItems="Start" HeightRequest="50">
                <Label Text="{Binding OwnUserName}" Padding="10, 0, 0, 0"></Label>
                <VerticalStackLayout HeightRequest="50" WidthRequest="120" BackgroundColor="{Binding OwnClockIsActive, Converter={StaticResource timetoBgConverter}}">
                    <Label Text="{Binding OwnTime, StringFormat='{0:mm\\:ss}'}" FontSize="40" HorizontalOptions="End" Padding="5, 0"/>
                </VerticalStackLayout>
            </FlexLayout>
        </VerticalStackLayout>
        <HorizontalStackLayout Grid.Row="2" VerticalOptions="Fill" Padding="10, 0, 10, 10">
            <CollectionView x:Name="MovesListView" WidthRequest="150" ItemsSource="{Binding Moves}" ItemsLayout="VerticalGrid, 2" SelectedItem="{Binding SelectedMove}" SelectionMode="Single">
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="chessPage:HistoryMove">
                        <Label Text="{Binding San}" WidthRequest="75" Padding="5, 2, 5, 2"></Label>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <VerticalStackLayout VerticalOptions="Fill" HorizontalOptions="End" Padding="90, 5, 0, 0">
                <HorizontalStackLayout HorizontalOptions="End">
                    <ImageButton Command="{Binding ResignCommand}">
                        <ImageButton.Source>
                            <FontImageSource Color="{DynamicResource TextColor}" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:IconFont.Flag}" Size="35" />
                        </ImageButton.Source>
                    </ImageButton>
                    <ImageButton Command="{Binding DrawCommand}" Padding="10, 0, 0, 0" BackgroundColor="{Binding HasDrawBeenOffered, Converter={StaticResource drawOffertoColorconverter}}">
                        <ImageButton.Source>
                            <FontImageSource Color="{DynamicResource TextColor}" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:IconFont.FractionOneHalf}" Size="35" />
                        </ImageButton.Source>
                    </ImageButton>
                </HorizontalStackLayout>
                <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="End" Padding="0, 25, 0, 0">
                    <ImageButton Command="{Binding ChangeToStartCommand}">
                        <ImageButton.Source>
                            <FontImageSource Color="{DynamicResource TextColor}" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:IconFont.PageFirst}" Size="35" />
                        </ImageButton.Source>
                    </ImageButton>
                    <ImageButton Command="{Binding ChangeToPreviousCommand}">
                        <ImageButton.Source>
                            <FontImageSource Color="{DynamicResource TextColor}" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:IconFont.ChevronLeft}" Size="35" />
                        </ImageButton.Source>
                    </ImageButton>
                    <ImageButton Command="{Binding ChangeToNextCommand}">
                        <ImageButton.Source>
                            <FontImageSource Color="{DynamicResource TextColor}" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:IconFont.ChevronRight}" Size="35" />
                        </ImageButton.Source>
                    </ImageButton>
                    <ImageButton Command="{Binding ChangeToLastCommand}">
                        <ImageButton.Source>
                            <FontImageSource Color="{DynamicResource TextColor}" FontFamily="MaterialDesignIcons" Glyph="{x:Static helpers:IconFont.PageLast}" Size="35" />
                        </ImageButton.Source>
                    </ImageButton>
                </HorizontalStackLayout>
            </VerticalStackLayout>
        </HorizontalStackLayout>
    </Grid>


</ContentPage>